# include "../modul_4_parameter/hurstberechner.h"
# include <gtest/gtest.h>
# include <random>

std::vector<uint32_t> folge072 {4547422	,
4255601	,
4651880	,
4161502	,
4177181	,
3638034	,
3918172	,
4080683	,
4262767	,
4147926	,
3544108	,
3806462	,
3623481	,
3812881	,
3859895	,
3962049	,
3794728	,
3727003	,
3571550	,
4013068	,
3778807	,
4033214	,
3811158	,
3677407	,
4023066	,
4126233	,
4136391	,
3586289	,
4185904	,
3597116	,
3895831	,
3473215	,
4023553	,
3802610	,
3725174	,
4271431	,
4050614	,
4081272	,
4114367	,
4325232	,
4156707	,
3790438	,
4024132	,
4116283	,
3863099	,
3914979	,
3873557	,
4204596	,
3713473	,
4118287	,
3577788	,
3847939	,
3983509	,
3840837	,
3688805	,
3679585	,
4023324	,
4083193	,
4132060	,
4415857	,
4232665	,
3876130	,
3826180	,
4100718	,
4357273	,
4008365	,
4139334	,
3399044	,
3999169	,
3800431	,
4038367	,
4176646	,
3784019	,
3601189	,
3614195	,
3997570	,
4000369	,
3696267	,
4069956	,
3959344	,
4326885	,
4029140	,
4128607	,
3948662	,
3898604	,
3924064	,
4247709	,
4043228	,
4632649	,
4506970	,
4173038	,
3787664	,
3760578	,
4348858	,
3554966	,
4067150	,
4170915	,
3672274	,
4382037	,
4223599	,
4399252	,
4104976	,
3942044	,
3803058	,
3823411	,
3937609	,
3840697	,
4347854	,
4339332	,
3977525	,
4083799	,
3715416	,
3952791	,
3826106	,
4052244	,
4346267	,
3596975	,
3754511	,
4285173	,
3997950	,
3879268	,
4280823	,
4522388	,
4408707	,
3595262	,
3929638	,
3879409	,
3913145	,
4065384	,
3769769	,
3827152	,
3937646	,
3964209	,
3783540	,
3977542	,
4247322	,
4142368	,
4513499	,
4532840	,
4300744	,
4096949	,
4149458	,
3905642	,
3952879	,
3989890	,
3831439	,
3758560	,
3864235	,
3762960	,
3447122	,
3354277	,
4100393	,
3686097	,
3772265	,
3970158	,
4329815	,
3581900	,
3476777	,
3465393	,
4079816	,
4089328	,
3538821	,
3546521	,
4498658	,
4228198	,
3808278	,
3953086	,
4035192	,
3960774	,
3675903	,
4246992	,
4293790	,
4379816	,
3670086	,
3870260	,
4168284	,
3800106	,
3878848	,
4159717	,
4517273	,
4162175	,
3921754	,
4012549	,
3924393	,
4294091	,
3564745	,
3778935	,
4439354	,
4142976	,
3785505	,
3646577	,
3666261	,
4014956	,
4136998	,
4013810	,
3739629	,
4454419	,
4239756	,
3543544	,
4264267	,
3999272	,
4397300	,
3937163	,
4222032	,
4079351	,
3832954	,
4207450	,
4024001	,
4047686	,
4165239	,
3690546	,
4136013	,
3874910	,
4111612	,
4479826	,
4314703	,
3839584	,
3796892	,
4334091	,
4700554	,
4124239	,
3940196	,
3667453	,
3706655	,
3819531	,
4417278	,
4231178	,
4117061	,
4707402	,
4729471	,
4272094	,
3939516	,
3819347	,
3976713	,
3960595	,
4116065	,
3671868	,
3843887	,
3955025	,
4236142	,
4354210	,
3767701	,
4306682	,
4262402	,
3637280	,
4222784	,
3921308	,
3779490	,
4025864	,
4014169	,
4225564	,
3830389	,
3510656	,
4395726	,
4258925	,
4061366	,
4156955	,
3913764	,
3728156	,
3677036	,
3168090	,
3683331	,
3714724	,
3557775	,
3988244	,
3737333	,
3801821	,
4505355	,
3946738	,
4183755	,
4238319	,
4114247	,
4516265	,
4022104	,
4036415	,
3976302	,
4220972	,
3963887	,
4074359	,
4307138	,
4077877	,
4162666	,
4195273	,
3805709	,
3768087	,
3864006	,
3844610	,
3990150	,
4273572	,
4283134	,
4033652	,
4410318	,
3800102	,
4406426	,
4047310	,
4404457	,
4027861	,
4161528	,
4053646	,
4519104	,
3848378	,
3586492	,
4125790	,
4170177	,
3894047	,
4079740	,
3816372	,
4347877	,
4256620	,
3924807	,
4336375	,
4203311	,
4184581	,
4087614	,
3955977	,
4104644	,
4064881	,
4294166	,
3737018	,
4107071	,
3870338	,
4110777	,
4454335	,
4063602	,
3894396	,
4546340	,
4238726	,
4239460	,
3961153	,
4459956	,
3932707	,
4177308	,
3763388	,
3903108	,
3946936	,
4283210	,
3691917	,
3769754	,
3874659	,
3656134	,
3851949	,
3685430	,
4461430	,
4127391	,
3796300	,
3707612	,
4052002	,
3757736	,
3786449	,
3685194	,
3615280	,
3605077	,
3791014	,
3717034	,
3959316	,
3324467	,
3577460	,
3821843	,
3644605	,
4305595	,
4405943	,
4680315	,
3890282	,
3993817	,
3469699	,
4137286	,
3559125	,
3666574	,
4121796	,
3549611	,
3533717	,
3902542	,
4056057	,
3788969	,
3840170	,
3510565	,
4314386	,
4276625	,
3896064	,
4033638	,
4434057	,
3965474	,
3492081	,
4075422	,
3665428	,
3879200	,
4450920	,
4219337	,
3694213	,
4346756	,
4120546	,
4066154	,
4194553	,
3566089	,
3598658	,
3933644	,
4326062	,
4142673	,
4212198	,
3923212	,
3927498	,
3754181	,
4268269	,
4238784	,
4287481	,
4117289	,
3989765	,
4118661	,
4268191	,
3925640	,
4114010	,
4660040	,
4202777	,
4596446	,
4470395	,
4194416	,
4373333	,
4286214	,
4485870	,
4646152	,
4213349	,
4464348	,
4098442	,
3740804	,
3748766	,
3845201	,
4136059	,
4178003	,
3995380	,
4296399	,
4040266	,
4085766	,
4155949	,
3695011	,
4263029	,
4193451	,
4245486	,
4246915	,
4115586	,
4343617	,
4014792	,
3834502	,
4277715	,
3792426	,
3973087	,
3988557	,
4141613	,
4066972	,
3462636	,
3918851	,
3972316	,
4290406	,
3446115	,
3582703	,
3804329	,
3553685	,
3378885	,
4282296	,
3722878	,
4003751	,
3900525	,
3792589	,
4332804	,
3889346	,
3688988	,
3812963	,
4140597	,
4073858	,
3812345	,
3791511	,
4020166	,
4255299	,
4392582	,
4659028	,
4281742	,
4191433	,
4437476	,
4505684	,
4362381	,
4246003	,
4093853	,
4394660	,
4574691	,
4159388	,
4000722	,
3561822	,
3516195	,
3694243	,
4526893	,
3715262	,
4027051	,
3967421	,
4003972	,
4227792	,
4504657	,
4028177	,
3867938	,
4127745	,
3925516	,
4475763	,
4637614	,
3617558	,
4436295	,
4600155	,
4344806	,
4074770	,
3751486	,
3671186	,
4078709	,
4503045	,
4315994	,
4109034	,
4620534	,
4353859	,
4165736	,
4257600	,
4237403	,
4267842	,
4092059	,
4300230	,
4018782	,
4101476	,
3535818	,
3925123	,
4207744	,
3758949	,
4220163	,
4322094	,
3921471	,
4149907	,
4187188	,
3847404	,
4124654	,
4029285	,
3361000	,
3959441	,
4269290	,
4225672	,
3745879	,
4497766	,
3932623	,
4458739	,
4501852	,
4145086	,
4056209	,
3883577	,
3961544	,
3984228	,
3992119	,
4386023	,
4685283	,
3575996	,
4063800	,
3713388	,
3914868	,
3746444	,
3638694	,
3467939	,
3765355	,
3760555	,
4084032	,
4167175	,
4357566	,
3603202	,
4207516	,
4090134	,
4138979	,
4179140	,
3872932	,
3929452	,
3776977	,
3832817	,
4064181	,
3952173	,
3738647	,
3884942	,
3432102	,
3949764	,
4028845	,
4247565	,
4282088	,
4227700	,
3765156	,
3725957	,
3380508	,
3995499	,
3906789	,
3802718	,
3756217	,
4200036	,
3733739	,
4407970	,
3681797	,
4086980	,
4004664	,
4595494	,
3771864	,
4580341	,
4022076	,
3586808	,
3969390	,
3603485	,
4429616	,
4277836	,
4367944	,
3867348	,
4290496	,
3881649	,
4169926	,
4399026	,
4703730	,
4260713	,
4496844	,
4293016	,
4279837	,
3771488	,
4480755	,
4192877	,
4197318	,
4018676	,
4075174	,
3729416	,
4141669	,
4229313	,
4376465	,
4240368	,
4026249	,
4009457	,
4290879	,
3955097	,
3516267	,
3883641	,
4169885	,
3744271	,
4198435	,
4286382	,
3975673	,
3868184	,
4511171	,
4024395	,
4109405	,
3726426	,
3977517	,
4276846	,
4300716	,
4065384	,
3701847	,
4060019	,
3754367	,
3926697	,
3962808	,
3696062	,
3625609	,
3755869	,
4131033	,
4634538	,
4708386	,
4110557	,
4609305	,
3850238	,
4123245	,
4061206	,
3962617	,
4039984	,
3837017	,
4479132	,
3835173	,
4180036	,
3776366	,
3517949	,
3728764	,
4069328	,
4156567	,
3752876	,
3605946	,
3843734	,
3966665	,
3893267	,
3873300	,
4145264	,
3964677	,
4023297	,
3470295	,
4026464	,
4237408	,
4238701	,
4164941	,
4296377	,
3819841	,
3902345	,
3877177	,
4151522	,
3901660	,
3820829	,
3833650	,
3875407	,
3564970	,
4002217	,
3162780	,
3915210	,
4052456	,
4057542	,
3981688	,
4070297	,
4301102	,
4256114	,
3924401	,
4354087	,
4076357	,
4074536	,
3906838	,
4483278	,
3741712	,
4555789	,
3780104	,
4248225	,
4111916	,
4446586	,
4019408	,
3763470	,
3825857	,
4025922	,
3965357	,
4349548	,
4428566	,
3537073	,
3464974	,
4231076	,
4167571	,
4054345	,
4051927	,
3622396	,
4054132	,
3939293	,
4034037	,
4245863	,
4315921	,
3620314	,
3564579	,
3834603	,
4178037	,
3579216	,
4249715	,
3764576	,
4142941	,
3667624	,
4127629	,
3823790	,
3462199	,
4114711	,
3789428	,
3745374	,
3403383	,
3864872	,
3957000	,
3686844	,
4391148	,
3915353	,
3745592	,
3851285	,
4053740	,
3739015	,
3961686	,
3512693	,
3417452	,
4310904	,
3698632	,
3861848	,
3764194	,
3384932	,
3494975	,
3872701	,
3743396	,
3585235	,
3775533	,
3548315	,
3668451	,
4043679	,
4207057	,
4060281	,
3778144	,
3219561	,
3657006	,
3537629	,
3854081	,
4011047	,
4038615	,
3745115	,
4063576	,
4344107	,
4285980	,
4213489	,
3781120	,
4180790	,
3893332	,
3693653	,
3957596	,
3971827	,
3787533	,
3690723	,
4398845	,
3466349	,
3495469	,
3923472	,
3721367	,
3599474	,
4022735	,
4141341	,
3921693	,
3482492	,
3451507	,
3488574	,
4036755	,
3624858	,
3602974	,
3803783	,
3912047	,
3499572	,
3575900	,
4186032	,
3930042	,
3527621	,
3519360	,
3658176	,
3539417	,
3948376	,
3709365	,
3906668	,
3596575	,
3643196	,
3306973	,
3964200	,
4126027	,
3464079	,
3400286	,
3891339	,
3971387	,
4176277	,
3973183	,
3469409	,
3803069	,
3846732	,
3563578	,
3338538	,
3563041	,
3521228	,
3434409	,
3999000	,
3596511	,
3349033	,
3662682	,
3822816	,
3451382	,
3354272	,
4157588	,
4412708	,
3632080	,
3725571	,
4167324	,
3943711	,
3605919	,
4201342	,
3557406	,
3505917	,
4216963	,
3939347	,
4054697	,
3639024	,
3512942	,
3746833	,
3877531	,
3974597	,
4382986	,
4298864	,
4132111	,
4574292	,
4838778	,
4582219	,
4342376	,
4639598	,
4899336	,
4204372	,
4611504	,
4065633	,
3857129	,
3847172	,
3839007	,
3988072	,
3640014	,
4340987	,
4157848	,
4398130	,
3968525	,
3494103	,
4393784	,
3745881	,
4044743	,
4010152	,
3886032	,
3614857	,
4067007	,
3878054	,
3098031	,
3129429	,
3971067	,
4154748	,
3782466	,
4192173	,
3934708	,
4095718	,
3696975	,
3786274	,
4121288	,
4226172	,
4086906	,
4451965	,
4225937	,
4081980	,
4170642	,
4177056	,
4056536	,
3588967	,
4268790	,
4084724	,
3963992	,
4134714	,
4520977	,
3523083	,
4196883	,
4302622	,
3631796	,
3783449	,
3556613	,
3735966	,
3926919	,
4055691	,
3722830	,
4167709	,
4333581	,
3754597	,
4181398	,
4128937	,
4106855	,
4008449	,
4082016	,
4182574	,
4345096	,
3951457	,
4180509	,
4096186	,
3640710	,
3799202	,
4558952	,
3657411	,
4121162	,
4021099	,
3914748	,
3987242	,
3678151	,
4121544	,
3690537	,
3998908	,
4013422	,
3988809	,
3751876	,
4431585	,
3949685	,
3728008	,
4134757	,
3808989	,
4009002	,
3782343	,
3780830	,
4125436	,
4061108	,
3861395	,
3645138	,
3739876	,
3683370	,
4245029	,
3828586	,
4045945	,
3512585	,
3538420	,
3747065	,
3629332	,
3404950	,
3747431	,
3869455	,
3544984	,
4067052	,
3407208	,
3194135	,
3927731	,
4077547	,
4702781	,
3802953	,
4012692	,
4247416	,
4221365	,
3891418	,
4092814	,
3661402	,
3829824	,
3965691	,
3949873	,
4234889	,
3793335	,
3402641	,
4055620	,
3980465	,
4224501	,
4138593	,
4026997	,
4010266	,
3647934	,
4013805	,
4022551	,
3594951	,
4490971	,
4243009	,
4278297	,
4434307	,
4070655};

TEST(HurstberechnerTest, einfacherDurchlauf) {
    std::vector<uint32_t> folge;

    srand(time(NULL));
    int wuerfel1=0;
    int wuerfel2=0;
    int wuerfel3=0;
    int wuerfel4=0;
    uint32_t element=0;
    for (int i=0;i<100;i++) {
        if (rand()%8 == 0) {wuerfel4 = rand()%100;}
        if (i%4 == 0) {wuerfel3 = rand()%6;}
        if (i%2 == 0) {wuerfel2 = rand()%6;}
        wuerfel1 = rand()%6;
        element = wuerfel4 + wuerfel3 + wuerfel2 + wuerfel1;
        folge.insert(folge.end(),element);
    }

    double hurst = Hurstberechner::klassisch(10, 20, folge);
    std::cout << "100 Würfe klassisch nach Feder Kap. 8.2: " << std::to_string(hurst) << "\n";
    hurst = Hurstberechner::anisLloyd(10,20,folge);
    std::cout << "100 Würfe Korrektur nach Anis-Lloyd: " << std::to_string(hurst) << "\n";

    for (int i=0;i<400;i++) {
        if (rand()%8 == 0) {wuerfel4 = rand()%100;}
        if (i%4 == 0) {wuerfel3 = rand()%6;}
        if (i%2 == 0) {wuerfel2 = rand()%6;}
        wuerfel1 = rand()%6;
        element = wuerfel4 + wuerfel3 + wuerfel2 + wuerfel1;
        folge.insert(folge.end(),element);
    }

    hurst = Hurstberechner::klassisch(10, 20, folge);
    std::cout << "500 Würfe klassisch nach Feder Kap. 8.2: " << std::to_string(hurst) << "\n";
    hurst = Hurstberechner::anisLloyd(10,20,folge);
    std::cout << "500 Würfe Korrektur nach Anis-Lloyd: " << std::to_string(hurst) << "\n";

    for (int i=0;i<4500;i++) {
        if (rand()%8 == 0) {wuerfel4 = rand()%100;}
        if (i%4 == 0) {wuerfel3 = rand()%6;}
        if (i%2 == 0) {wuerfel2 = rand()%6;}
        wuerfel1 = rand()%6;
        element = wuerfel4 + wuerfel3 + wuerfel2 + wuerfel1;
        folge.insert(folge.end(),element);
    }

    hurst = Hurstberechner::klassisch(10, 20, folge);
    std::cout << "5000 Würfe klassisch nach Feder Kap. 8.2: " << std::to_string(hurst) << "\n";
    hurst = Hurstberechner::anisLloyd(10,20,folge);
    std::cout << "5000 Würfe Korrektur nach Anis-Lloyd: " << std::to_string(hurst) << "\n";

        for (int i=0;i<45000;i++) {
        if (rand()%8 == 0) {wuerfel4 = rand()%100;}
        if (i%4 == 0) {wuerfel3 = rand()%6;}
        if (i%2 == 0) {wuerfel2 = rand()%6;}
        wuerfel1 = rand()%6;
        element = wuerfel4 + wuerfel3 + wuerfel2 + wuerfel1;
        folge.insert(folge.end(),element);
    }

    hurst = Hurstberechner::klassisch(10, 20, folge);
    std::cout << "50000 Würfe klassisch nach Feder Kap. 8.2: " << std::to_string(hurst) << "\n";
    hurst = Hurstberechner::anisLloyd(10,20,folge);
    std::cout << "50000 Würfe Korrektur nach Anis-Lloyd: " << std::to_string(hurst) << "\n";

    EXPECT_GE(hurst,0);
}

TEST(HurstberechnerTest, HurstSample0_72) {
    double hurst = Hurstberechner::klassisch(10, 20, folge072);
    std::cout << "Klassisch nach Feder Kap. 8.2: " << std::to_string(hurst) << "\n";
    hurst = Hurstberechner::anisLloyd(10,20,folge072);
    std::cout << "Korrektur nach Anis-Lloyd: " << std::to_string(hurst) << "\n";

    EXPECT_GE(hurst,0.5);
}